name: Build Docker with Database

on:
  release:
    types:
      - published
  schedule:
    - cron: "0 20 0 0 0"

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: dart-lang/setup-dart@v1
      - run: dart pub get
      - run: dart test
  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - id: release
        uses: pozetroninc/github-action-get-latest-release@v0.5.0
        with:
          owner: fischerscode
          repo: Traefik-GeoLogger
          excludes: prerelease, draft

      - uses: actions/checkout@v2.3.4
        with:
          ref: ${{ steps.release.outputs.release }}

      - name: setup buildx
        uses: docker/setup-buildx-action@v1.3.0
        with:
          install: true
      - name: Login to Docker Hub
        uses: docker/login-action@v1.9.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Download City database
        id: download
        run: |
          wget -O GeoLite2-City.tar.gz https://download.maxmind.com/app/geoip_download\?edition_id\=GeoLite2-City\&license_key\=$${{ secrets.MAXMIND_KEY }}\&suffix\=tar.gz
          tar -xf GeoLite2-City.tar.gz
          rm GeoLite2-City.tar.gz
          mv $(ls -d -- GeoLite2-City_[0-9]*)/GeoLite2-City.mmdb ./
          echo "::set-output name=build::$(ls -d -- GeoLite2-City_[0-9]* | sed -e 's/GeoLite2-City_//g')"
          rm -r GeoLite2-City_*

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          file: Dockerfile.database
          pull: true
          push: true
          tags: fischerscode/traefik-geologger-city:${{ steps.release.outputs.release }}-${{ steps.download.outputs.build }}
          platforms: linux/amd64 #,linux/arm/v7,linux/arm64/v8,linux/ppc64le,linux/s390x
